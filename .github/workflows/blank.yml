name: Deploy SSM Association

on:
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
      aws_session_token:
        description: 'AWS Session Token'
        required: true
      region:
        description: 'AWS Region'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ github.event.inputs.aws_access_key_id }}
          aws configure set aws_secret_access_key ${{ github.event.inputs.aws_secret_access_key }}
          aws configure set aws_session_token ${{ github.event.inputs.aws_session_token }}
          aws configure set region ${{ github.event.inputs.region }}
          
      - name: Get AWS Account ID
        id: get-account-id
        run: |
          account_id=$(aws sts get-caller-identity --query Account --output text)
          echo "::set-output name=account_id::$account_id"

      - name: Check for Existing SSM Association
        id: check_association
        run: |
          document_name=${{ steps.get-account-id.outputs.account_id }}
          association_id=$(aws ssm list-associations --query "Associations[?AssociationName=='${document_name}'].AssociationId" --output text)
          echo "association_id=${association_id}" >> $GITHUB_ENV

      - name: Create or Update SSM Association
        run: |
          if [ -z "${{ env.association_id }}" ]; then
            echo "Creating new SSM Association"
            aws ssm create-association \
              --name "${document_name}" \
              --association-name "${document_name}" \
              --document-version "\$LATEST" \
              --targets "Key=InstanceIds,Values=*" \
              --schedule-expression "rate(1 day)"
          else
            echo "Updating existing SSM Association"
            aws ssm update-association \
              --association-id "${{ env.association_id }}" \
              --name "${document_name}" \
              --targets "Key=InstanceIds,Values=*" \
              --schedule-expression "rate(1 day)"
          fi
